package Latency;

import java.awt.BorderLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;

import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTable;

/**
*
* @author Sanjeev
*/

public class Latency_Display_Application extends javax.swing.JFrame {

   /**
    * Creates new form Latency_Display_Application
    */
   public Latency_Display_Application() {
       initComponents();
   }

   /**
    * This method is called from within the constructor to initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is always
    * regenerated by the Form Editor.
    */
   
// Variables declaration - do not modify                     
   private javax.swing.JButton jButton1;
   private javax.swing.JComboBox jComboBox1;
   private javax.swing.JLabel jLabel1;
   private javax.swing.JLabel jLabel2;
   private javax.swing.JLabel jLabel3;
   private javax.swing.JPanel jPanel1;
   private javax.swing.JTextField Start;
   private javax.swing.JTextField End;
   public static Connection conn;
   public static String URL= "jdbc:oracle:thin:@localhost:1521:xe";
   public static String username="sanjeev";
   public static String DBpassword="sanjeev";
   public static String[][] dbdata ;
   public static int noOfRecords;
   // End of variables declaration 
   
   @SuppressWarnings("unchecked")                        
   private void initComponents() {

       jPanel1 = new javax.swing.JPanel();
       jLabel2 = new javax.swing.JLabel();
       jComboBox1 = new javax.swing.JComboBox();
       jLabel1 = new javax.swing.JLabel();
       jLabel3 = new javax.swing.JLabel();
       jButton1 = new javax.swing.JButton();
       Start = new javax.swing.JTextField();
       End = new javax.swing.JTextField();

       setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
       setTitle("Latency Application");
       jLabel3.setText("Search By :");

       jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Date", "Latency" }));
       
       jLabel1.setText("START :");
       
       jLabel2.setText("END     :");

       jButton1.setText("Search");
       
       jButton1.addActionListener(new ActionListener() {

    	   public void actionPerformed(ActionEvent e) {
    		   dbdata(jComboBox1.getSelectedItem().toString(),Start.getText(),End.getText());
    		   Object headers[] = { "TIMESTAMP", "LATENCY","UNIT" }; 
    			JTable table = new JTable(dbdata, headers);
    			JScrollPane scrollPane = new JScrollPane(table);
    			final JFrame SchedulerStatusframe = new JFrame("HISTORY");
    			SchedulerStatusframe.add(scrollPane, BorderLayout.CENTER);
    			SchedulerStatusframe.setSize(800,150);
    			SchedulerStatusframe.setVisible(true);
    			SchedulerStatusframe.addWindowListener(new WindowAdapter() {

    				public void windowClosing(WindowEvent e) {
    					SchedulerStatusframe.dispose();
    				}
    			});
    	   }
    	   });
       javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
       jPanel1.setLayout(jPanel1Layout);
       jPanel1Layout.setHorizontalGroup(
           jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
           .addGroup(jPanel1Layout.createSequentialGroup()
               .addGap(94, 94, 94)
               .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                   .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                       .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                           .addGroup(jPanel1Layout.createSequentialGroup()
                               .addGap(108, 108, 108)
                               .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                           .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                               .addGap(108, 108, 108)
                               .addComponent(End, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                       .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                           .addGap(108, 108, 108)
                           .addComponent(Start, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                   .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                       .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                       .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                       .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                   .addGroup(jPanel1Layout.createSequentialGroup()
                       .addGap(64, 64, 64)
                       .addComponent(jButton1)))
               .addContainerGap(97, Short.MAX_VALUE))
       );
       jPanel1Layout.setVerticalGroup(
           jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
           .addGroup(jPanel1Layout.createSequentialGroup()
               .addGap(49, 49, 49)
               .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                   .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                   .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
               .addGap(28, 28, 28)
               .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                   .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                   .addComponent(Start))
               .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
               .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                   .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                   .addComponent(End))
               .addGap(46, 46, 46)
               .addComponent(jButton1)
               .addGap(68, 68, 68))
       );

       javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
       getContentPane().setLayout(layout);
       layout.setHorizontalGroup(
           layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
           .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
       );
       layout.setVerticalGroup(
           layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
           .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
       );

       pack();
   }// </editor-fold>                        

   /**
    * @param args the command line arguments
    */
   public static void main(String args[]) {
	   /* Set the Nimbus look and feel */
       //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
       /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
        * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
        */
	   try {
           for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
               if ("Nimbus".equals(info.getName())) {
                   javax.swing.UIManager.setLookAndFeel(info.getClassName());
                   break;
               }
           }
       } catch (Exception ex) {
    	   System.out.println(ex);    	   
       }
       //</editor-fold>

       /* Create and display the form */
       java.awt.EventQueue.invokeLater(new Runnable() {
           public void run() {
               new Latency_Display_Application().setVisible(true);
           }
       });
   }
    
   
   
 //----------------------------Read data by Start Date from Database---------------------------------------------
   
   public static  ResultSet dbdata(String Search_Criteria,String Start,String End ) {
     
     Statement stmt = null;
     ResultSet rs = null;
     try{
      conn = getConnection1();
      stmt=conn.createStatement();
      String Query=null;
      if(Search_Criteria.contains("Date"))
      {
    	  if(End.isEmpty())
          {
    		  Query = "select TO_CHAR(TIME, 'dd/mm/yyyy hh24:mi:ss'),LATENCY,UNIT from sanjeev.latency where (TIME > '"+Start+"' or TIME like '%"+Start+"%')";  
          }else
          if(Start.isEmpty())
          {
        	  Query = "select TO_CHAR(TIME, 'dd/mm/yyyy hh24:mi:ss'),LATENCY,UNIT from sanjeev.latency where (TIME < '"+End+"' or TIME like '%"+End+"%')";
          }else
          {
        	  Query = "select TO_CHAR(TIME, 'dd/mm/yyyy hh24:mi:ss'),LATENCY,UNIT from sanjeev.latency where (TIME > '"+Start+"' or TIME like '%"+Start+"%') and (TIME < '"+End+"' or TIME like '%"+End+"%')";
          }
      }else
    	  if(Search_Criteria.contains("Latency"))
          {
        	  if(End.isEmpty())
              {
           	   Query = "select TO_CHAR(TIME, 'dd/mm/yyyy hh24:mi:ss'),LATENCY,UNIT from sanjeev.latency where LATENCY >= '"+Start+"'";
              }else
              if(Start.isEmpty())
              {
           	   Query = "select TO_CHAR(TIME, 'dd/mm/yyyy hh24:mi:ss'),LATENCY,UNIT from sanjeev.latency where LATENCY <= '"+End+"'";
              }else
              {
           	   Query = "select TO_CHAR(TIME, 'dd/mm/yyyy hh24:mi:ss'),LATENCY,UNIT from sanjeev.latency where LATENCY >= '"+Start+"' and LATENCY <= '"+End+"'";
              }
          }
      
      
      System.out.println(Query);
      rs = stmt.executeQuery(Query);    
      int i;
      dbdata = new String[10000][3];
      for(i=0;rs.next()==true;i++)
   	{
   	   dbdata[i][0]=rs.getString(1);
   	   dbdata[i][1]=rs.getString(2);
   	   dbdata[i][2]=rs.getString(3);
   	}
      noOfRecords=i;
      System.out.println(i);
      conn.close();
     }catch(Exception e){ }

   return rs;
    }

   //------------------------Connection Manager Class----------------------------

       public static  Connection getConnection1()
       {
        Connection conn=null;
          try
          {
           Class.forName("oracle.jdbc.driver.OracleDriver");
           System.out.println("iam entering connection");
           conn = DriverManager.getConnection(URL,username,DBpassword);
       System.out.println("connection established");
      } catch (Exception e) {
       System.out.println(e);
      }
      return conn;
    }
}
